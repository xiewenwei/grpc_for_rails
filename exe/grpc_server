#!/usr/bin/env ruby
require 'optparse'
require 'yaml'
require 'grpc_for_rails'
require 'active_support/core_ext/hash'

default_host_port = {
  host: '0.0.0.0',
  port: 3011,
  pool_size: 5
}

options = {
  env: 'development',
  config: 'config/grpc_server.yml'
}

OptionParser.new do |opts|
  opts.banner = "Usage: grpc_server [options]"

  opts.separator "GRPC options:"
  opts.on('-h', '--host HOST', 'Host (default 0.0.0.0)') do |value|
    options[:host] = value
  end
  opts.on('-t', '--port PORT', 'Port (default: 3011)') do |value|
    options[:port] = value
  end
  opts.on('-e', '--environment RAILS_ENV', 'Rails env (default: development)') do |value|
    options[:env] = value
  end
  opts.on('-c', '--config CONFIG_FILE', 'Config file (default: config/grpc_server.yml)') do |value|
    options[:config] = value
  end
  opts.on('-s', '--size pool_size', 'pool size for grpc_server (default: 5)') do
    options[:pool_size] = value.to_i
  end
  opts.separator ""

  opts.separator "Process options:"
  opts.on("-d", "--daemonize", 'run daemonized in the background (default: false)') do
    options[:daemonize] = true
  end
  opts.on("-p", "--pid PIDFILE", 'the pid filename') do |value|
    options[:pidfile] = value
  end
  opts.on("-l", "--log LOGFILE", 'the log filename') do |value|
    options[:logfile]   = value
  end
  opts.separator ""
end.parse!

if File.exists? options[:config]
  config = YAML.load(File.read(options[:config]))
  options = config[options[:env]].symbolize_keys.merge(options)
end

options = default_host_port.merge(options)

puts "Start grpc_server with:\n #{options}"
GrpcForRails::Server.new(options).run
